{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function SearchBar(_ref){let{onSelectTicker}=_ref;const[tickers,setTickers]=useState([]);// State to store the tickers\n// Fetch tickers from the API when the component mounts\nuseEffect(()=>{const fetchTickers=async()=>{try{const response=await fetch(\"http://localhost:5001/api/tickers\");if(!response.ok){throw new Error(\"Failed to fetch tickers\");}const data=await response.json();setTickers(data);// Update the state with the fetched tickers\n}catch(error){console.error(\"Error fetching tickers:\",error);}};fetchTickers();},[]);// Ensures this runs only once on mount\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"select\",{onChange:e=>onSelectTicker(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a ticker\"}),tickers.map(ticker=>/*#__PURE__*/_jsx(\"option\",{value:ticker,children:ticker},ticker))]})});}export default SearchBar;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","SearchBar","_ref","onSelectTicker","tickers","setTickers","fetchTickers","response","fetch","ok","Error","data","json","error","console","children","onChange","e","target","value","map","ticker"],"sources":["/Users/hamzahmuhammad/Desktop/PricingWebapp/src/SearchBar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction SearchBar({ onSelectTicker }) {\n  const [tickers, setTickers] = useState([]); // State to store the tickers\n\n  // Fetch tickers from the API when the component mounts\n  useEffect(() => {\n    const fetchTickers = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5001/api/tickers\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch tickers\");\n        }\n        const data = await response.json();\n        setTickers(data); // Update the state with the fetched tickers\n      } catch (error) {\n        console.error(\"Error fetching tickers:\", error);\n      }\n    };\n\n    fetchTickers();\n  }, []); // Ensures this runs only once on mount\n\n  return (\n    <div>\n      <select onChange={(e) => onSelectTicker(e.target.value)}>\n        <option value=\"\">Select a ticker</option>\n        {tickers.map((ticker) => (\n          <option key={ticker} value={ticker}>\n            {ticker}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n\nexport default SearchBar;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,QAAS,CAAAC,SAASA,CAAAC,IAAA,CAAqB,IAApB,CAAEC,cAAe,CAAC,CAAAD,IAAA,CACnC,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAAE;AAE5C;AACAD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAW,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,mCAAmC,CAAC,CACjE,GAAI,CAACD,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,yBAAyB,CAAC,CAC5C,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClCP,UAAU,CAACM,IAAI,CAAC,CAAE;AACpB,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CACjD,CACF,CAAC,CAEDP,YAAY,CAAC,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,mBACER,IAAA,QAAAiB,QAAA,cACEf,KAAA,WAAQgB,QAAQ,CAAGC,CAAC,EAAKd,cAAc,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CAAAJ,QAAA,eACtDjB,IAAA,WAAQqB,KAAK,CAAC,EAAE,CAAAJ,QAAA,CAAC,iBAAe,CAAQ,CAAC,CACxCX,OAAO,CAACgB,GAAG,CAAEC,MAAM,eAClBvB,IAAA,WAAqBqB,KAAK,CAAEE,MAAO,CAAAN,QAAA,CAChCM,MAAM,EADIA,MAEL,CACT,CAAC,EACI,CAAC,CACN,CAAC,CAEV,CAEA,cAAe,CAAApB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}