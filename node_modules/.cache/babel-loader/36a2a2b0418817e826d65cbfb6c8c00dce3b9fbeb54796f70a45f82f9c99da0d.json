{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmuhammad/Desktop/PricingWebapp/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport SearchBar from \"./SearchBar\";\nimport StockChart from \"./StockChart\";\nimport Parameters from \"./Parameters\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedTicker, setSelectedTicker] = useState(null);\n  const [stockData, setStockData] = useState([]);\n  const [drift, setDrift] = useState(null);\n  const [volatility, setVolatility] = useState(null);\n  const [error, setError] = useState(null);\n  const hostname = \"localhost\";\n  const port = process.env.port || 5001;\n\n  // Fetch stock data when the selected ticker changes\n  useEffect(() => {\n    let intervalId;\n    const fetchInitialData = async () => {\n      try {\n        // First get the initial parameters\n        const paramsResponse = await axios.get(`http://${hostname}:${port}/api/stock/${selectedTicker}/initial-parameters`);\n        setDrift(paramsResponse.data.drift);\n        setVolatility(paramsResponse.data.volatility);\n\n        // Then get the stock data\n        const stockResponse = await axios.get(`http://${hostname}:${port}/api/stock/${selectedTicker}`);\n        setStockData(stockResponse.data.prices);\n        setError(null);\n      } catch (err) {\n        setError(\"Failed to fetch stock data. Please check the backend server.\");\n        console.error(err);\n      }\n    };\n    if (selectedTicker) {\n      fetchInitialData();\n      intervalId = setInterval(fetchInitialData, 60000);\n    }\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [selectedTicker]);\n  const handleParameterUpdate = async (newDrift, newVolatility) => {\n    try {\n      // Log the updated parameters\n      console.log(\"Updating parameters:\", {\n        drift: newDrift,\n        volatility: newVolatility\n      });\n\n      // Send the updated parameters to the backend\n      const response = await axios.post(`http://${hostname}:5001/api/stock/${selectedTicker}/parameters`, {\n        drift: newDrift,\n        volatility: newVolatility\n      });\n\n      // Log the backend response in the console\n      console.log(\"Backend response:\", response.data);\n\n      // Update with the new parameters\n      setDrift(newDrift);\n      setVolatility(newVolatility);\n\n      // Send a success message \n      console.log(\"Parameters updated successfully!\");\n    } catch (err) {\n      setError(\"Failed to update parameters. Please check the backend server.\");\n      console.error(\"Error updating parameters:\", err);\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // If ticker is not selected, load the header section and the full page background\n    _jsxDEV(\"div\", {\n      className: `App ${!selectedTicker ? 'gradient-bg' : ''}`,\n      style: {\n        textAlign: \"center\",\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Real-Time Stock Prices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"A web app by Hamzah Muhammad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"(t+1) stock price calculated using the GBM Formula\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select a Stock Ticker to get started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n          onSelectTicker: setSelectedTicker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), selectedTicker &&\n      /*#__PURE__*/\n      // When a ticker is selected, load the StockChart and Parameters sections\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-chart-container\",\n          children: /*#__PURE__*/_jsxDEV(StockChart, {\n            data: stockData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"parameters-section\",\n          style: {\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Parameters, {\n            drift: drift,\n            volatility: volatility,\n            onUpdate: handleParameterUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"ZXowx6nfmh7t2EDRUKJ5BtTn36g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","SearchBar","StockChart","Parameters","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","selectedTicker","setSelectedTicker","stockData","setStockData","drift","setDrift","volatility","setVolatility","error","setError","hostname","port","process","env","intervalId","fetchInitialData","paramsResponse","get","data","stockResponse","prices","err","console","setInterval","clearInterval","handleParameterUpdate","newDrift","newVolatility","log","response","post","className","style","textAlign","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectTicker","color","onUpdate","_c","$RefreshReg$"],"sources":["/Users/hamzahmuhammad/Desktop/PricingWebapp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport SearchBar from \"./SearchBar\";\nimport StockChart from \"./StockChart\";\nimport Parameters from \"./Parameters\";\n\n\nfunction App() {\n  const [selectedTicker, setSelectedTicker] = useState(null);\n  const [stockData, setStockData] = useState([]);\n  const [drift, setDrift] = useState(null);\n  const [volatility, setVolatility] = useState(null);\n  const [error, setError] = useState(null);\n  const hostname = \"localhost\";\n  const port = process.env.port || 5001;\n\n  // Fetch stock data when the selected ticker changes\n  useEffect(() => {\n    let intervalId;\n\n    const fetchInitialData = async () => {\n      try {\n        // First get the initial parameters\n        const paramsResponse = await axios.get(\n          `http://${hostname}:${port}/api/stock/${selectedTicker}/initial-parameters`\n        );\n        setDrift(paramsResponse.data.drift);\n        setVolatility(paramsResponse.data.volatility);\n\n        // Then get the stock data\n        const stockResponse = await axios.get(\n          `http://${hostname}:${port}/api/stock/${selectedTicker}`\n        );\n        setStockData(stockResponse.data.prices);\n        setError(null);\n      } catch (err) {\n        setError(\"Failed to fetch stock data. Please check the backend server.\");\n        console.error(err);\n      }\n    };\n\n    if (selectedTicker) {\n      fetchInitialData();\n      intervalId = setInterval(fetchInitialData, 60000);\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [selectedTicker]);\n\n  const handleParameterUpdate = async (newDrift, newVolatility) => {\n    try {\n      // Log the updated parameters\n      console.log(\"Updating parameters:\", {\n        drift: newDrift,\n        volatility: newVolatility,\n      });\n  \n      // Send the updated parameters to the backend\n      const response = await axios.post(`http://${hostname}:5001/api/stock/${selectedTicker}/parameters`, {\n        drift: newDrift,\n        volatility: newVolatility,\n      });\n  \n      // Log the backend response in the console\n      console.log(\"Backend response:\", response.data);\n  \n      // Update with the new parameters\n      setDrift(newDrift);\n      setVolatility(newVolatility);\n  \n      // Send a success message \n      console.log(\"Parameters updated successfully!\");\n    } catch (err) {\n      setError(\"Failed to update parameters. Please check the backend server.\");\n      console.error(\"Error updating parameters:\", err);\n    }\n  };\n\n  return ( \n    // If ticker is not selected, load the header section and the full page background\n    <div className={`App ${!selectedTicker ? 'gradient-bg' : ''}`} style={{ textAlign: \"center\", minHeight: '100vh' }}>\n      <div className=\"header-section\">\n        <h1>Real-Time Stock Prices</h1>\n        <h5>A web app by Hamzah Muhammad</h5>\n        <h5>(t+1) stock price calculated using the GBM Formula</h5>\n        <h2>Select a Stock Ticker to get started</h2>\n        <SearchBar onSelectTicker={setSelectedTicker} />\n        {error && <p style={{ color: \"red\" }}>{error}</p>}\n      </div>\n    \n\n      {selectedTicker && ( \n        // When a ticker is selected, load the StockChart and Parameters sections\n        <>\n          <div className=\"stock-chart-container\">\n            <StockChart data={stockData} />\n          </div>\n          <div className=\"parameters-section\" style={{ textAlign: \"center\" }}>\n            <Parameters\n              drift={drift}\n              volatility={volatility}\n              onUpdate={handleParameterUpdate}\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMsB,QAAQ,GAAG,WAAW;EAC5B,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;;EAErC;EACAtB,SAAS,CAAC,MAAM;IACd,IAAIyB,UAAU;IAEd,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF;QACA,MAAMC,cAAc,GAAG,MAAM1B,KAAK,CAAC2B,GAAG,CACpC,UAAUP,QAAQ,IAAIC,IAAI,cAAcX,cAAc,qBACxD,CAAC;QACDK,QAAQ,CAACW,cAAc,CAACE,IAAI,CAACd,KAAK,CAAC;QACnCG,aAAa,CAACS,cAAc,CAACE,IAAI,CAACZ,UAAU,CAAC;;QAE7C;QACA,MAAMa,aAAa,GAAG,MAAM7B,KAAK,CAAC2B,GAAG,CACnC,UAAUP,QAAQ,IAAIC,IAAI,cAAcX,cAAc,EACxD,CAAC;QACDG,YAAY,CAACgB,aAAa,CAACD,IAAI,CAACE,MAAM,CAAC;QACvCX,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOY,GAAG,EAAE;QACZZ,QAAQ,CAAC,8DAA8D,CAAC;QACxEa,OAAO,CAACd,KAAK,CAACa,GAAG,CAAC;MACpB;IACF,CAAC;IAED,IAAIrB,cAAc,EAAE;MAClBe,gBAAgB,CAAC,CAAC;MAClBD,UAAU,GAAGS,WAAW,CAACR,gBAAgB,EAAE,KAAK,CAAC;IACnD;IAEA,OAAO,MAAM;MACX,IAAID,UAAU,EAAE;QACdU,aAAa,CAACV,UAAU,CAAC;MAC3B;IACF,CAAC;EACH,CAAC,EAAE,CAACd,cAAc,CAAC,CAAC;EAEpB,MAAMyB,qBAAqB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,aAAa,KAAK;IAC/D,IAAI;MACF;MACAL,OAAO,CAACM,GAAG,CAAC,sBAAsB,EAAE;QAClCxB,KAAK,EAAEsB,QAAQ;QACfpB,UAAU,EAAEqB;MACd,CAAC,CAAC;;MAEF;MACA,MAAME,QAAQ,GAAG,MAAMvC,KAAK,CAACwC,IAAI,CAAC,UAAUpB,QAAQ,mBAAmBV,cAAc,aAAa,EAAE;QAClGI,KAAK,EAAEsB,QAAQ;QACfpB,UAAU,EAAEqB;MACd,CAAC,CAAC;;MAEF;MACAL,OAAO,CAACM,GAAG,CAAC,mBAAmB,EAAEC,QAAQ,CAACX,IAAI,CAAC;;MAE/C;MACAb,QAAQ,CAACqB,QAAQ,CAAC;MAClBnB,aAAa,CAACoB,aAAa,CAAC;;MAE5B;MACAL,OAAO,CAACM,GAAG,CAAC,kCAAkC,CAAC;IACjD,CAAC,CAAC,OAAOP,GAAG,EAAE;MACZZ,QAAQ,CAAC,+DAA+D,CAAC;MACzEa,OAAO,CAACd,KAAK,CAAC,4BAA4B,EAAEa,GAAG,CAAC;IAClD;EACF,CAAC;EAED;IAAA;IACE;IACA1B,OAAA;MAAKoC,SAAS,EAAE,OAAO,CAAC/B,cAAc,GAAG,aAAa,GAAG,EAAE,EAAG;MAACgC,KAAK,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAQ,CAAE;MAAAC,QAAA,gBAChHxC,OAAA;QAAKoC,SAAS,EAAC,gBAAgB;QAAAI,QAAA,gBAC7BxC,OAAA;UAAAwC,QAAA,EAAI;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/B5C,OAAA;UAAAwC,QAAA,EAAI;QAA4B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrC5C,OAAA;UAAAwC,QAAA,EAAI;QAAkD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3D5C,OAAA;UAAAwC,QAAA,EAAI;QAAoC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7C5C,OAAA,CAACJ,SAAS;UAACiD,cAAc,EAAEvC;QAAkB;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC/C/B,KAAK,iBAAIb,OAAA;UAAGqC,KAAK,EAAE;YAAES,KAAK,EAAE;UAAM,CAAE;UAAAN,QAAA,EAAE3B;QAAK;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,EAGLvC,cAAc;MAAA;MACb;MACAL,OAAA,CAAAE,SAAA;QAAAsC,QAAA,gBACExC,OAAA;UAAKoC,SAAS,EAAC,uBAAuB;UAAAI,QAAA,eACpCxC,OAAA,CAACH,UAAU;YAAC0B,IAAI,EAAEhB;UAAU;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,eACN5C,OAAA;UAAKoC,SAAS,EAAC,oBAAoB;UAACC,KAAK,EAAE;YAAEC,SAAS,EAAE;UAAS,CAAE;UAAAE,QAAA,eACjExC,OAAA,CAACF,UAAU;YACTW,KAAK,EAAEA,KAAM;YACbE,UAAU,EAAEA,UAAW;YACvBoC,QAAQ,EAAEjB;UAAsB;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,eACN,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;AAEV;AAACxC,EAAA,CAzGQD,GAAG;AAAA6C,EAAA,GAAH7C,GAAG;AA2GZ,eAAeA,GAAG;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}