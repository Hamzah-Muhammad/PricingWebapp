{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmuhammad/Desktop/PricingWebapp/src/StockChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useMemo } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart, CategoryScale, LinearScale, PointElement, LineElement, Tooltip } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip);\nfunction StockChart({\n  data,\n  ticker\n}) {\n  _s();\n  // Add ticker as a prop\n  const chartRef = useRef(null);\n  const prevTickerRef = useRef(null);\n  useEffect(() => {\n    const chartInstance = chartRef.current;\n\n    // Reset chart when ticker changes\n    if (prevTickerRef.current !== ticker && chartInstance) {\n      chartInstance.destroy();\n      chartRef.current = null;\n    }\n    prevTickerRef.current = ticker;\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, [ticker]);\n  const chartData = useMemo(() => {\n    return {\n      labels: data.map(point => point.time),\n      datasets: [{\n        label: \"Stock Price\",\n        data: data.map(point => point.price),\n        borderColor: \"rgba(75,192,192,1)\",\n        fill: false\n      }]\n    };\n  }, [data]);\n  const options = useMemo(() => ({\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      tooltip: {\n        enabled: true,\n        mode: \"index\",\n        intersect: false,\n        backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n        titleColor: \"#fff\",\n        bodyColor: \"#fff\",\n        borderColor: \"#fff\",\n        borderWidth: 1,\n        displayColors: false,\n        callbacks: {\n          title: () => \"\",\n          label: context => {\n            const price = context.raw.toFixed(2);\n            return `$${price}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        type: \"category\",\n        title: {\n          display: true,\n          text: \"Time\",\n          color: \"#666\",\n          font: {\n            size: 14,\n            weight: \"bold\"\n          },\n          padding: {\n            top: 10,\n            bottom: 10\n          }\n        },\n        grid: {\n          display: false\n        },\n        ticks: {\n          color: \"#666\",\n          font: {\n            size: 12\n          },\n          callback: (value, index) => {\n            // Only show labels at 15-minute intervals\n            if (index % 15 === 0) {\n              var _data$index;\n              return ((_data$index = data[index]) === null || _data$index === void 0 ? void 0 : _data$index.time) || null;\n            }\n            return null;\n          }\n        }\n      },\n      y: {\n        type: \"linear\",\n        title: {\n          display: true,\n          text: \"Price (USD)\",\n          color: \"#666\",\n          font: {\n            size: 14,\n            weight: \"bold\"\n          },\n          padding: {\n            top: 0,\n            bottom: 10\n          }\n        },\n        grid: {\n          color: \"#eee\"\n        },\n        ticks: {\n          color: \"#666\",\n          font: {\n            size: 12\n          }\n        }\n      }\n    }\n  }), [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"400px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      ref: chartRef,\n      data: chartData,\n      options: options\n    }, ticker, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(StockChart, \"FiSIKbzJ/LaLpwk93kEoq6eb+g4=\");\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","useEffect","useRef","useMemo","Line","Chart","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","jsxDEV","_jsxDEV","register","StockChart","data","ticker","_s","chartRef","prevTickerRef","chartInstance","current","destroy","chartData","labels","map","point","time","datasets","label","price","borderColor","fill","options","responsive","maintainAspectRatio","plugins","tooltip","enabled","mode","intersect","backgroundColor","titleColor","bodyColor","borderWidth","displayColors","callbacks","title","context","raw","toFixed","scales","x","type","display","text","color","font","size","weight","padding","top","bottom","grid","ticks","callback","value","index","_data$index","y","style","width","height","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hamzahmuhammad/Desktop/PricingWebapp/src/StockChart.js"],"sourcesContent":["import React, { useEffect, useRef, useMemo } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart, CategoryScale, LinearScale, PointElement, LineElement, Tooltip } from \"chart.js\";\n\nChart.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip);\n\nfunction StockChart({ data, ticker }) {  // Add ticker as a prop\n  const chartRef = useRef(null);\n  const prevTickerRef = useRef(null);\n\n  useEffect(() => {\n    const chartInstance = chartRef.current;\n    \n    // Reset chart when ticker changes\n    if (prevTickerRef.current !== ticker && chartInstance) {\n      chartInstance.destroy();\n      chartRef.current = null;\n    }\n    prevTickerRef.current = ticker;\n\n    return () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, [ticker]);\n\n  const chartData = useMemo(() => {\n    return {\n      labels: data.map((point) => point.time),\n      datasets: [\n        {\n          label: \"Stock Price\",\n          data: data.map((point) => point.price),\n          borderColor: \"rgba(75,192,192,1)\",\n          fill: false,\n        },\n      ],\n    };\n  }, [data]);\n\n  const options = useMemo(() => ({\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      tooltip: {\n        enabled: true,\n        mode: \"index\",\n        intersect: false,\n        backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n        titleColor: \"#fff\",\n        bodyColor: \"#fff\",\n        borderColor: \"#fff\",\n        borderWidth: 1,\n        displayColors: false,\n        callbacks: {\n          title: () => \"\",\n          label: (context) => {\n            const price = context.raw.toFixed(2);\n            return `$${price}`;\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        type: \"category\",\n        title: {\n          display: true,\n          text: \"Time\",\n          color: \"#666\",\n          font: {\n            size: 14,\n            weight: \"bold\",\n          },\n          padding: { top: 10, bottom: 10 },\n        },\n        grid: {\n          display: false,\n        },\n        ticks: {\n          color: \"#666\",\n          font: {\n            size: 12,\n          },\n          callback: (value, index) => {\n            // Only show labels at 15-minute intervals\n            if (index % 15 === 0) {\n              return data[index]?.time || null;\n            }\n            return null;\n          },\n        },\n      },\n      y: {\n        type: \"linear\",\n        title: {\n          display: true,\n          text: \"Price (USD)\",\n          color: \"#666\",\n          font: {\n            size: 14,\n            weight: \"bold\",\n          },\n          padding: { top: 0, bottom: 10 },\n        },\n        grid: {\n          color: \"#eee\",\n        },\n        ticks: {\n          color: \"#666\",\n          font: {\n            size: 12,\n          },\n        },\n      },\n    },\n  }), [data]);\n\n  return (\n    <div style={{ width: \"100%\", height: \"400px\" }}>\n      <Line \n        ref={chartRef}\n        data={chartData}\n        options={options}\n        key={ticker}  // Force re-render when ticker changes (due to an error where labels where overwriting each other)\n      />\n    </div>\n  );\n}\n\nexport default StockChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}