{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmuhammad/stock-app/src/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchBar({\n  onSelectTicker\n}) {\n  _s();\n  const [tickers, setTickers] = useState([]); // State to store the tickers\n\n  // Fetch tickers from the API when the component mounts\n  useEffect(() => {\n    const fetchTickers = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5001/api/tickers\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch tickers\");\n        }\n        const data = await response.json();\n        setTickers(data); // Update the state with the fetched tickers\n      } catch (error) {\n        console.error(\"Error fetching tickers:\", error);\n      }\n    };\n    fetchTickers();\n  }, []); // Empty dependency array ensures this runs only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => onSelectTicker(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a ticker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), tickers.map(ticker => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: ticker,\n        children: ticker\n      }, ticker, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"T/Pjbb3z+ejES8QYcD9CNAjQA4A=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","SearchBar","onSelectTicker","_s","tickers","setTickers","fetchTickers","response","fetch","ok","Error","data","json","error","console","children","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","map","ticker","_c","$RefreshReg$"],"sources":["/Users/hamzahmuhammad/stock-app/src/SearchBar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction SearchBar({ onSelectTicker }) {\n  const [tickers, setTickers] = useState([]); // State to store the tickers\n\n  // Fetch tickers from the API when the component mounts\n  useEffect(() => {\n    const fetchTickers = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5001/api/tickers\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch tickers\");\n        }\n        const data = await response.json();\n        setTickers(data); // Update the state with the fetched tickers\n      } catch (error) {\n        console.error(\"Error fetching tickers:\", error);\n      }\n    };\n\n    fetchTickers();\n  }, []); // Empty dependency array ensures this runs only once on mount\n\n  return (\n    <div>\n      <select onChange={(e) => onSelectTicker(e.target.value)}>\n        <option value=\"\">Select a ticker</option>\n        {tickers.map((ticker) => (\n          <option key={ticker} value={ticker}>\n            {ticker}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n\nexport default SearchBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,SAASA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C;EACAD,SAAS,CAAC,MAAM;IACd,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QACjE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;QAC5C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCP,UAAU,CAACM,IAAI,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDP,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEN,OAAA;IAAAe,QAAA,eACEf,OAAA;MAAQgB,QAAQ,EAAGC,CAAC,IAAKf,cAAc,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAAAJ,QAAA,gBACtDf,OAAA;QAAQmB,KAAK,EAAC,EAAE;QAAAJ,QAAA,EAAC;MAAe;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACxCnB,OAAO,CAACoB,GAAG,CAAEC,MAAM,iBAClBzB,OAAA;QAAqBmB,KAAK,EAAEM,MAAO;QAAAV,QAAA,EAChCU;MAAM,GADIA,MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACpB,EAAA,CAjCQF,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAmClB,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}