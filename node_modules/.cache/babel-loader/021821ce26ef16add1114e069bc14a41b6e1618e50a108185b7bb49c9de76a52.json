{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmuhammad/Desktop/PricingWebapp/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport SearchBar from \"./SearchBar\";\nimport StockChart from \"./StockChart\";\nimport Parameters from \"./Parameters\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedTicker, setSelectedTicker] = useState(null);\n  const [stockData, setStockData] = useState([]);\n  const [drift, setDrift] = useState(0.0002);\n  const [volatility, setVolatility] = useState(0.05);\n  const [error, setError] = useState(null);\n  const hostname = \"localhost\";\n  const port = process.env.port || 5001;\n\n  // Fetch stock data when the selected ticker changes\n  useEffect(() => {\n    let intervalId;\n    const fetchStockData = async () => {\n      try {\n        const response = await axios.get(`http://${hostname}:${port}/api/stock/${selectedTicker}`);\n        console.log(\"Fetched new data:\", response.data.prices); // Log the fetched data in the console\n        setStockData(response.data.prices); // Replace old data with new data\n        setError(null);\n      } catch (err) {\n        setError(\"Failed to fetch stock data. Please check the backend server.\");\n        console.error(err);\n      }\n    };\n    if (selectedTicker) {\n      fetchStockData(); // Fetch data immediately when ticker is selected\n      intervalId = setInterval(fetchStockData, 60000); // Fetch data every minute\n    }\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId); // Clear when the ticker name is changed\n      }\n    };\n  }, [selectedTicker]);\n  const handleParameterUpdate = async (newDrift, newVolatility) => {\n    try {\n      // Log the updated parameters\n      console.log(\"Updating parameters:\", {\n        drift: newDrift,\n        volatility: newVolatility\n      });\n\n      // Send the updated parameters to the backend\n      const response = await axios.post(`http://${hostname}:5001/api/stock/${selectedTicker}/parameters`, {\n        drift: newDrift,\n        volatility: newVolatility\n      });\n\n      // Log the backend response in the console\n      console.log(\"Backend response:\", response.data);\n\n      // Update with the new parameters\n      setDrift(newDrift);\n      setVolatility(newVolatility);\n\n      // Send a success message \n      console.log(\"Parameters updated successfully!\");\n    } catch (err) {\n      setError(\"Failed to update parameters. Please check the backend server.\");\n      console.error(\"Error updating parameters:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Real-Time Stock Prices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"A web app by Hamzah Muhammad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"(t+1) stock price calculated using the GBM Formula\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select a Stock Ticker to get started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSelectTicker: setSelectedTicker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), selectedTicker && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stock-chart-container\",\n        children: /*#__PURE__*/_jsxDEV(StockChart, {\n          data: stockData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parameters-section\",\n        style: {\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Parameters, {\n          drift: drift,\n          volatility: volatility,\n          onUpdate: handleParameterUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dT3TnXdl7pvWzdUSyxZ/RUMXkF0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","SearchBar","StockChart","Parameters","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","selectedTicker","setSelectedTicker","stockData","setStockData","drift","setDrift","volatility","setVolatility","error","setError","hostname","port","process","env","intervalId","fetchStockData","response","get","console","log","data","prices","err","setInterval","clearInterval","handleParameterUpdate","newDrift","newVolatility","post","className","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectTicker","color","onUpdate","_c","$RefreshReg$"],"sources":["/Users/hamzahmuhammad/Desktop/PricingWebapp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport SearchBar from \"./SearchBar\";\nimport StockChart from \"./StockChart\";\nimport Parameters from \"./Parameters\";\n\n\nfunction App() {\n  const [selectedTicker, setSelectedTicker] = useState(null);\n  const [stockData, setStockData] = useState([]);\n  const [drift, setDrift] = useState(0.0002);\n  const [volatility, setVolatility] = useState(0.05);\n  const [error, setError] = useState(null);\n  const hostname = \"localhost\";\n  const port = process.env.port || 5001;\n\n  // Fetch stock data when the selected ticker changes\n  useEffect(() => {\n    let intervalId;\n\n    const fetchStockData = async () => {\n      try {\n        const response = await axios.get(`http://${hostname}:${port}/api/stock/${selectedTicker}`);\n        console.log(\"Fetched new data:\", response.data.prices); // Log the fetched data in the console\n        setStockData(response.data.prices);                     // Replace old data with new data\n        setError(null);\n      } catch (err) {\n        setError(\"Failed to fetch stock data. Please check the backend server.\");\n        console.error(err);\n      }\n    };\n\n    if (selectedTicker) {\n      fetchStockData();                                        // Fetch data immediately when ticker is selected\n      intervalId = setInterval(fetchStockData, 60000);         // Fetch data every minute\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);                             // Clear when the ticker name is changed\n      }\n    };\n  }, [selectedTicker]);\n\n  const handleParameterUpdate = async (newDrift, newVolatility) => {\n    try {\n      // Log the updated parameters\n      console.log(\"Updating parameters:\", {\n        drift: newDrift,\n        volatility: newVolatility,\n      });\n  \n      // Send the updated parameters to the backend\n      const response = await axios.post(`http://${hostname}:5001/api/stock/${selectedTicker}/parameters`, {\n        drift: newDrift,\n        volatility: newVolatility,\n      });\n  \n      // Log the backend response in the console\n      console.log(\"Backend response:\", response.data);\n  \n      // Update with the new parameters\n      setDrift(newDrift);\n      setVolatility(newVolatility);\n  \n      // Send a success message \n      console.log(\"Parameters updated successfully!\");\n    } catch (err) {\n      setError(\"Failed to update parameters. Please check the backend server.\");\n      console.error(\"Error updating parameters:\", err);\n    }\n  };\n\n  return (\n    <div className=\"App\" style={{ textAlign: \"center\",  }}>\n      <div className=\"header-section\">\n        <h1>Real-Time Stock Prices</h1>\n        <h5>A web app by Hamzah Muhammad</h5>\n        <h5>(t+1) stock price calculated using the GBM Formula</h5>\n        <h2>Select a Stock Ticker to get started</h2>\n        <SearchBar onSelectTicker={setSelectedTicker} />\n        {error && <p style={{ color: \"red\" }}>{error}</p>}\n      </div>\n\n      {selectedTicker && (\n        <>\n          <div className=\"stock-chart-container\">\n            <StockChart data={stockData} />\n          </div>\n          <div className=\"parameters-section\" style={{ textAlign: \"center\" }}>\n            <Parameters\n              drift={drift}\n              volatility={volatility}\n              onUpdate={handleParameterUpdate}\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}