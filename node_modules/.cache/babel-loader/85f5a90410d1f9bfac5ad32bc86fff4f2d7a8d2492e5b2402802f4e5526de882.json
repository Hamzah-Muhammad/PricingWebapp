{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmuhammad/Desktop/PricingWebapp/src/StockChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart, CategoryScale, LinearScale, PointElement, LineElement, Tooltip } from \"chart.js\";\n\n// Register the required scales, elements, and plugins\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip);\nfunction StockChart({\n  data\n}) {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const chartInstance = chartRef.current;\n    return () => {\n      // Destroy the chart instance when the component unmounts\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, []);\n\n  // Filter data to show only every 15 minutes\n  const filteredData = data.filter((point, index) => {\n    // Assuming `point.time` is in a format like \"HH:MM\"\n    const time = point.time.split(\":\");\n    const minutes = parseInt(time[1], 10);\n    return minutes % 15 === 0; // Only include times where minutes are 0, 15, 30, or 45\n  });\n  const chartData = {\n    labels: filteredData.map(point => point.time),\n    // Use filtered times for labels\n    datasets: [{\n      label: \"Stock Price\",\n      data: filteredData.map(point => point.price),\n      // Use filtered prices for data\n      borderColor: \"rgba(75,192,192,1)\",\n      fill: false\n    }]\n  };\n  const options = {\n    responsive: true,\n    // Make the chart responsive\n    maintainAspectRatio: false,\n    // Allow the chart to resize freely\n    plugins: {\n      tooltip: {\n        enabled: true,\n        // Enable tooltips\n        mode: \"index\",\n        // Show tooltips for all datasets at the same index\n        intersect: false,\n        // Show tooltips even if the cursor is not directly over a data point\n        backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n        // Tooltip background color\n        titleColor: \"#fff\",\n        // Tooltip title color\n        bodyColor: \"#fff\",\n        // Tooltip body color\n        borderColor: \"#fff\",\n        // Tooltip border color\n        borderWidth: 1,\n        // Tooltip border width\n        displayColors: false,\n        // Disable the colored box\n        callbacks: {\n          title: () => \"\",\n          // Remove the title (time) from the tooltip\n          label: context => {\n            // Format the price to 2 decimal places\n            const price = context.raw.toFixed(2);\n            return `$${price}`; // Display only the formatted price\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        type: \"category\",\n        // Ensure the x-axis uses the 'category' scale\n        title: {\n          display: true,\n          // Enable the X-axis title\n          text: \"Time\",\n          // X-axis label text\n          color: \"#666\",\n          // Label color\n          font: {\n            size: 14,\n            // Label font size\n            weight: \"bold\" // Label font weight\n          },\n          padding: {\n            top: 10,\n            bottom: 10\n          } // Padding around the label\n        },\n        grid: {\n          display: false // Hide X-axis grid lines\n        },\n        ticks: {\n          color: \"#666\",\n          // X-axis tick color\n          font: {\n            size: 12 // X-axis tick font size\n          }\n        }\n      },\n      y: {\n        type: \"linear\",\n        // Ensure the y-axis uses the 'linear' scale\n        title: {\n          display: true,\n          // Enable the Y-axis title\n          text: \"Price (USD)\",\n          // Y-axis label text\n          color: \"#666\",\n          // Label color\n          font: {\n            size: 14,\n            // Label font size\n            weight: \"bold\" // Label font weight\n          },\n          padding: {\n            top: 0,\n            bottom: 10\n          } // Padding around the label\n        },\n        grid: {\n          color: \"#eee\" // Y-axis grid line color\n        },\n        ticks: {\n          color: \"#666\",\n          // Y-axis tick color\n          font: {\n            size: 12 // Y-axis tick font size\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"400px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      ref: chartRef,\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(StockChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","useEffect","useRef","Line","Chart","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","jsxDEV","_jsxDEV","register","StockChart","data","_s","chartRef","chartInstance","current","destroy","filteredData","filter","point","index","time","split","minutes","parseInt","chartData","labels","map","datasets","label","price","borderColor","fill","options","responsive","maintainAspectRatio","plugins","tooltip","enabled","mode","intersect","backgroundColor","titleColor","bodyColor","borderWidth","displayColors","callbacks","title","context","raw","toFixed","scales","x","type","display","text","color","font","size","weight","padding","top","bottom","grid","ticks","y","style","width","height","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hamzahmuhammad/Desktop/PricingWebapp/src/StockChart.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart, CategoryScale, LinearScale, PointElement, LineElement, Tooltip } from \"chart.js\";\n\n// Register the required scales, elements, and plugins\nChart.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip);\n\nfunction StockChart({ data }) {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const chartInstance = chartRef.current;\n\n    return () => {\n      // Destroy the chart instance when the component unmounts\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, []);\n\n  // Filter data to show only every 15 minutes\n  const filteredData = data.filter((point, index) => {\n    // Assuming `point.time` is in a format like \"HH:MM\"\n    const time = point.time.split(\":\");\n    const minutes = parseInt(time[1], 10);\n    return minutes % 15 === 0; // Only include times where minutes are 0, 15, 30, or 45\n  });\n\n  const chartData = {\n    labels: filteredData.map((point) => point.time), // Use filtered times for labels\n    datasets: [\n      {\n        label: \"Stock Price\",\n        data: filteredData.map((point) => point.price), // Use filtered prices for data\n        borderColor: \"rgba(75,192,192,1)\",\n        fill: false,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true, // Make the chart responsive\n    maintainAspectRatio: false, // Allow the chart to resize freely\n    plugins: {\n      tooltip: {\n        enabled: true, // Enable tooltips\n        mode: \"index\", // Show tooltips for all datasets at the same index\n        intersect: false, // Show tooltips even if the cursor is not directly over a data point\n        backgroundColor: \"rgba(0, 0, 0, 0.8)\", // Tooltip background color\n        titleColor: \"#fff\", // Tooltip title color\n        bodyColor: \"#fff\", // Tooltip body color\n        borderColor: \"#fff\", // Tooltip border color\n        borderWidth: 1, // Tooltip border width\n        displayColors: false, // Disable the colored box\n        callbacks: {\n          title: () => \"\", // Remove the title (time) from the tooltip\n          label: (context) => {\n            // Format the price to 2 decimal places\n            const price = context.raw.toFixed(2);\n            return `$${price}`; // Display only the formatted price\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        type: \"category\", // Ensure the x-axis uses the 'category' scale\n        title: {\n          display: true, // Enable the X-axis title\n          text: \"Time\", // X-axis label text\n          color: \"#666\", // Label color\n          font: {\n            size: 14, // Label font size\n            weight: \"bold\", // Label font weight\n          },\n          padding: { top: 10, bottom: 10 }, // Padding around the label\n        },\n        grid: {\n          display: false, // Hide X-axis grid lines\n        },\n        ticks: {\n          color: \"#666\", // X-axis tick color\n          font: {\n            size: 12, // X-axis tick font size\n          },\n        },\n      },\n      y: {\n        type: \"linear\", // Ensure the y-axis uses the 'linear' scale\n        title: {\n          display: true, // Enable the Y-axis title\n          text: \"Price (USD)\", // Y-axis label text\n          color: \"#666\", // Label color\n          font: {\n            size: 14, // Label font size\n            weight: \"bold\", // Label font weight\n          },\n          padding: { top: 0, bottom: 10 }, // Padding around the label\n        },\n        grid: {\n          color: \"#eee\", // Y-axis grid line color\n        },\n        ticks: {\n          color: \"#666\", // Y-axis tick color\n          font: {\n            size: 12, // Y-axis tick font size\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <div style={{ width: \"100%\", height: \"400px\" }}>\n      <Line ref={chartRef} data={chartData} options={options} />\n    </div>\n  );\n}\n\nexport default StockChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}