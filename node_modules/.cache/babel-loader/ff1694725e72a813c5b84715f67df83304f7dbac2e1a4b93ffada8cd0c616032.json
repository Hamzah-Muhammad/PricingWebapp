{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmuhammad/Desktop/PricingWebapp/src/StockChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart, CategoryScale, LinearScale, PointElement, LineElement, Tooltip } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip);\nfunction StockChart({\n  initialData = []\n}) {\n  _s();\n  // <- Default prop value\n  const chartRef = useRef(null);\n  const [data, setData] = useState(initialData);\n\n  // Format time to \"H:MM\" (e.g., \"9:30\")\n  const formatTime = timeString => {\n    if (!timeString) return \"\";\n    const [hours, minutes] = timeString.split(\":\");\n    return `${parseInt(hours, 10)}:${minutes}`;\n  };\n\n  // Only proceed if data exists\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading chart data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  const chartData = {\n    labels: data.map(point => formatTime(point.time)),\n    datasets: [{\n      label: \"Stock Price\",\n      data: data.map(point => point.price),\n      borderColor: \"rgba(75,192,192,1)\",\n      fill: false\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      tooltip: {\n        callbacks: {\n          title: tooltipItems => formatTime(tooltipItems[0].label),\n          label: context => `$${context.raw.toFixed(2)}`\n        }\n      }\n    },\n    scales: {\n      x: {\n        type: \"category\",\n        ticks: {\n          callback: (value, index) => {\n            const [hours, minutes] = data[index].time.split(\":\");\n            return parseInt(minutes) % 15 === 0 ? formatTime(`${hours}:${minutes}`) : null;\n          },\n          maxRotation: 0,\n          autoSkip: false\n        },\n        grid: {\n          display: false\n        }\n      },\n      y: {\n        title: {\n          text: \"Price (USD)\"\n        },\n        grid: {\n          color: \"#eee\"\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"400px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      ref: chartRef,\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(StockChart, \"7KtttNq/rMC9SWClR5l5ZIGNdRs=\");\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Line","Chart","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","jsxDEV","_jsxDEV","register","StockChart","initialData","_s","chartRef","data","setData","formatTime","timeString","hours","minutes","split","parseInt","length","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","labels","map","point","time","datasets","label","price","borderColor","fill","options","responsive","maintainAspectRatio","plugins","tooltip","callbacks","title","tooltipItems","context","raw","toFixed","scales","x","type","ticks","callback","value","index","maxRotation","autoSkip","grid","display","y","text","color","style","width","height","ref","_c","$RefreshReg$"],"sources":["/Users/hamzahmuhammad/Desktop/PricingWebapp/src/StockChart.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart, CategoryScale, LinearScale, PointElement, LineElement, Tooltip } from \"chart.js\";\n\nChart.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip);\n\nfunction StockChart({ initialData = [] }) {  // <- Default prop value\n  const chartRef = useRef(null);\n  const [data, setData] = useState(initialData);\n\n  // Format time to \"H:MM\" (e.g., \"9:30\")\n  const formatTime = (timeString) => {\n    if (!timeString) return \"\";\n    const [hours, minutes] = timeString.split(\":\");\n    return `${parseInt(hours, 10)}:${minutes}`;\n  };\n\n  // Only proceed if data exists\n  if (!data || data.length === 0) {\n    return <div>Loading chart data...</div>;\n  }\n\n  const chartData = {\n    labels: data.map((point) => formatTime(point.time)),\n    datasets: [\n      {\n        label: \"Stock Price\",\n        data: data.map((point) => point.price),\n        borderColor: \"rgba(75,192,192,1)\",\n        fill: false,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      tooltip: {\n        callbacks: {\n          title: (tooltipItems) => formatTime(tooltipItems[0].label),\n          label: (context) => `$${context.raw.toFixed(2)}`,\n        },\n      },\n    },\n    scales: {\n      x: {\n        type: \"category\",\n        ticks: {\n          callback: (value, index) => {\n            const [hours, minutes] = data[index].time.split(\":\");\n            return parseInt(minutes) % 15 === 0 ? formatTime(`${hours}:${minutes}`) : null;\n          },\n          maxRotation: 0,\n          autoSkip: false,\n        },\n        grid: { display: false },\n      },\n      y: {\n        title: { text: \"Price (USD)\" },\n        grid: { color: \"#eee\" },\n      },\n    },\n  };\n\n  return (\n    <div style={{ width: \"100%\", height: \"400px\" }}>\n      <Line ref={chartRef} data={chartData} options={options} />\n    </div>\n  );\n}\n\nexport default StockChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}