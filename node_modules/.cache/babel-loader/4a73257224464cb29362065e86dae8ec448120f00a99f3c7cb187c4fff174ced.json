{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmuhammad/stock-app/src/StockChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart, CategoryScale, LinearScale, PointElement, LineElement } from \"chart.js\";\n\n// Register the required scales and elements\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, PointElement, LineElement);\nfunction StockChart({\n  data\n}) {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const chartInstance = chartRef.current;\n    return () => {\n      // Destroy the chart instance when the component unmounts\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, []);\n  const chartData = {\n    labels: data.map(point => point.time),\n    datasets: [{\n      label: \"Stock Price\",\n      data: data.map(point => point.price),\n      borderColor: \"rgba(75,192,192,1)\",\n      fill: false\n    }]\n  };\n  const options = {\n    responsive: true,\n    // Ensure the chart is responsive\n    maintainAspectRatio: false,\n    // Allow the chart to resize freely\n    scales: {\n      x: {\n        type: \"category\" // Ensure the x-axis uses the 'category' scale\n      },\n      y: {\n        type: \"linear\" // Ensure the y-axis uses the 'linear' scale\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    ref: chartRef,\n    data: chartData,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n}\n_s(StockChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","useEffect","useRef","Line","Chart","CategoryScale","LinearScale","PointElement","LineElement","jsxDEV","_jsxDEV","register","StockChart","data","_s","chartRef","chartInstance","current","destroy","chartData","labels","map","point","time","datasets","label","price","borderColor","fill","options","responsive","maintainAspectRatio","scales","x","type","y","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hamzahmuhammad/stock-app/src/StockChart.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart, CategoryScale, LinearScale, PointElement, LineElement } from \"chart.js\";\n\n// Register the required scales and elements\nChart.register(CategoryScale, LinearScale, PointElement, LineElement);\n\nfunction StockChart({ data }) {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const chartInstance = chartRef.current;\n\n    return () => {\n      // Destroy the chart instance when the component unmounts\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, []);\n\n  const chartData = {\n    labels: data.map((point) => point.time),\n    datasets: [\n      {\n        label: \"Stock Price\",\n        data: data.map((point) => point.price),\n        borderColor: \"rgba(75,192,192,1)\",\n        fill: false,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true, // Ensure the chart is responsive\n    maintainAspectRatio: false, // Allow the chart to resize freely\n    scales: {\n      x: {\n        type: \"category\", // Ensure the x-axis uses the 'category' scale\n      },\n      y: {\n        type: \"linear\", // Ensure the y-axis uses the 'linear' scale\n      },\n    },\n  };\n\n  return <Line ref={chartRef} data={chartData} options={options} />;\n}\n\nexport default StockChart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,KAAK,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,QAAQ,UAAU;;AAEvF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAN,KAAK,CAACO,QAAQ,CAACN,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,CAAC;AAErE,SAASI,UAAUA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,MAAMe,aAAa,GAAGD,QAAQ,CAACE,OAAO;IAEtC,OAAO,MAAM;MACX;MACA,IAAID,aAAa,EAAE;QACjBA,aAAa,CAACE,OAAO,CAAC,CAAC;MACzB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAEP,IAAI,CAACQ,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;IACvCC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,aAAa;MACpBZ,IAAI,EAAEA,IAAI,CAACQ,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACI,KAAK,CAAC;MACtCC,WAAW,EAAE,oBAAoB;MACjCC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAAE;IAClBC,mBAAmB,EAAE,KAAK;IAAE;IAC5BC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,IAAI,EAAE,UAAU,CAAE;MACpB,CAAC;MACDC,CAAC,EAAE;QACDD,IAAI,EAAE,QAAQ,CAAE;MAClB;IACF;EACF,CAAC;EAED,oBAAOxB,OAAA,CAACP,IAAI;IAACiC,GAAG,EAAErB,QAAS;IAACF,IAAI,EAAEM,SAAU;IAACU,OAAO,EAAEA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnE;AAAC1B,EAAA,CAxCQF,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AA0CnB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}