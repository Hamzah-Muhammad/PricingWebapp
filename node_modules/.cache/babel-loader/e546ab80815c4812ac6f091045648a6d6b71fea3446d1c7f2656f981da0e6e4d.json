{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmuhammad/Desktop/PricingWebapp/src/StockChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart, CategoryScale, LinearScale, PointElement, LineElement, Tooltip, TimeScale } from \"chart.js\";\nimport \"chartjs-adapter-date-fns\"; // Import the date adapter\n\n// Register the required scales, elements, and plugins\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip, TimeScale);\nfunction StockChart({\n  data\n}) {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const chartInstance = chartRef.current;\n    return () => {\n      // Destroy the chart instance when the component unmounts\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, []);\n  const chartData = {\n    labels: data.map(point => point.time),\n    datasets: [{\n      label: \"Stock Price\",\n      data: data.map(point => point.price),\n      borderColor: \"rgba(75,192,192,1)\",\n      fill: false\n    }]\n  };\n  const options = {\n    responsive: true,\n    // Make the chart responsive\n    maintainAspectRatio: false,\n    // Allow the chart to resize freely\n    plugins: {\n      tooltip: {\n        enabled: true,\n        // Enable tooltips\n        mode: \"index\",\n        // Show tooltips for all datasets at the same index\n        intersect: false,\n        // Show tooltips even if the cursor is not directly over a data point\n        backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n        // Tooltip background color\n        titleColor: \"#fff\",\n        // Tooltip title color\n        bodyColor: \"#fff\",\n        // Tooltip body color\n        borderColor: \"#fff\",\n        // Tooltip border color\n        borderWidth: 1,\n        // Tooltip border width\n        displayColors: false,\n        // Disable the colored box\n        callbacks: {\n          title: () => \"\",\n          // Remove the title (time) from the tooltip\n          label: context => {\n            // Format the price to 2 decimal places\n            const price = context.raw.toFixed(2);\n            return `$${price}`; // Display only the formatted price\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        type: \"time\",\n        // Use the time scale for the X-axis\n        time: {\n          unit: \"minute\",\n          // Display one-minute intervals\n          displayFormats: {\n            minute: \"HH:mm\" // Format the time as \"HH:mm\" (e.g., \"10:00\")\n          },\n          tooltipFormat: \"HH:mm\" // Format the tooltip time as \"HH:mm\"\n        },\n        title: {\n          display: true,\n          // Enable the X-axis title\n          text: \"Time\",\n          // X-axis label text\n          color: \"#666\",\n          // Label color\n          font: {\n            size: 14,\n            // Label font size\n            weight: \"bold\" // Label font weight\n          },\n          padding: {\n            top: 10,\n            bottom: 10\n          } // Padding around the label\n        },\n        grid: {\n          display: false // Hide X-axis grid lines\n        },\n        ticks: {\n          color: \"#666\",\n          // X-axis tick color\n          font: {\n            size: 12 // X-axis tick font size\n          },\n          stepSize: 15,\n          // Display labels every 15 minutes\n          autoSkip: true,\n          // Automatically skip labels to avoid overlap\n          maxTicksLimit: 20 // Limit the number of labels displayed\n        }\n      },\n      y: {\n        type: \"linear\",\n        // Ensure the y-axis uses the 'linear' scale\n        title: {\n          display: true,\n          // Enable the Y-axis title\n          text: \"Price (USD)\",\n          // Y-axis label text\n          color: \"#666\",\n          // Label color\n          font: {\n            size: 14,\n            // Label font size\n            weight: \"bold\" // Label font weight\n          },\n          padding: {\n            top: 0,\n            bottom: 10\n          } // Padding around the label\n        },\n        grid: {\n          color: \"#eee\" // Y-axis grid line color\n        },\n        ticks: {\n          color: \"#666\",\n          // Y-axis tick color\n          font: {\n            size: 12 // Y-axis tick font size\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"400px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      ref: chartRef,\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(StockChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","useEffect","useRef","Line","Chart","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","TimeScale","jsxDEV","_jsxDEV","register","StockChart","data","_s","chartRef","chartInstance","current","destroy","chartData","labels","map","point","time","datasets","label","price","borderColor","fill","options","responsive","maintainAspectRatio","plugins","tooltip","enabled","mode","intersect","backgroundColor","titleColor","bodyColor","borderWidth","displayColors","callbacks","title","context","raw","toFixed","scales","x","type","unit","displayFormats","minute","tooltipFormat","display","text","color","font","size","weight","padding","top","bottom","grid","ticks","stepSize","autoSkip","maxTicksLimit","y","style","width","height","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hamzahmuhammad/Desktop/PricingWebapp/src/StockChart.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  Chart,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Tooltip,\n  TimeScale,\n} from \"chart.js\";\nimport \"chartjs-adapter-date-fns\"; // Import the date adapter\n\n// Register the required scales, elements, and plugins\nChart.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip, TimeScale);\n\nfunction StockChart({ data }) {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const chartInstance = chartRef.current;\n\n    return () => {\n      // Destroy the chart instance when the component unmounts\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, []);\n\n  const chartData = {\n    labels: data.map((point) => point.time),\n    datasets: [\n      {\n        label: \"Stock Price\",\n        data: data.map((point) => point.price),\n        borderColor: \"rgba(75,192,192,1)\",\n        fill: false,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true, // Make the chart responsive\n    maintainAspectRatio: false, // Allow the chart to resize freely\n    plugins: {\n      tooltip: {\n        enabled: true, // Enable tooltips\n        mode: \"index\", // Show tooltips for all datasets at the same index\n        intersect: false, // Show tooltips even if the cursor is not directly over a data point\n        backgroundColor: \"rgba(0, 0, 0, 0.8)\", // Tooltip background color\n        titleColor: \"#fff\", // Tooltip title color\n        bodyColor: \"#fff\", // Tooltip body color\n        borderColor: \"#fff\", // Tooltip border color\n        borderWidth: 1, // Tooltip border width\n        displayColors: false, // Disable the colored box\n        callbacks: {\n          title: () => \"\", // Remove the title (time) from the tooltip\n          label: (context) => {\n            // Format the price to 2 decimal places\n            const price = context.raw.toFixed(2);\n            return `$${price}`; // Display only the formatted price\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        type: \"time\", // Use the time scale for the X-axis\n        time: {\n          unit: \"minute\", // Display one-minute intervals\n          displayFormats: {\n            minute: \"HH:mm\", // Format the time as \"HH:mm\" (e.g., \"10:00\")\n          },\n          tooltipFormat: \"HH:mm\", // Format the tooltip time as \"HH:mm\"\n        },\n        title: {\n          display: true, // Enable the X-axis title\n          text: \"Time\", // X-axis label text\n          color: \"#666\", // Label color\n          font: {\n            size: 14, // Label font size\n            weight: \"bold\", // Label font weight\n          },\n          padding: { top: 10, bottom: 10 }, // Padding around the label\n        },\n        grid: {\n          display: false, // Hide X-axis grid lines\n        },\n        ticks: {\n          color: \"#666\", // X-axis tick color\n          font: {\n            size: 12, // X-axis tick font size\n          },\n          stepSize: 15, // Display labels every 15 minutes\n          autoSkip: true, // Automatically skip labels to avoid overlap\n          maxTicksLimit: 20, // Limit the number of labels displayed\n        },\n      },\n      y: {\n        type: \"linear\", // Ensure the y-axis uses the 'linear' scale\n        title: {\n          display: true, // Enable the Y-axis title\n          text: \"Price (USD)\", // Y-axis label text\n          color: \"#666\", // Label color\n          font: {\n            size: 14, // Label font size\n            weight: \"bold\", // Label font weight\n          },\n          padding: { top: 0, bottom: 10 }, // Padding around the label\n        },\n        grid: {\n          color: \"#eee\", // Y-axis grid line color\n        },\n        ticks: {\n          color: \"#666\", // Y-axis tick color\n          font: {\n            size: 12, // Y-axis tick font size\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <div style={{ width: \"100%\", height: \"400px\" }}>\n      <Line ref={chartRef} data={chartData} options={options} />\n    </div>\n  );\n}\n\nexport default StockChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}