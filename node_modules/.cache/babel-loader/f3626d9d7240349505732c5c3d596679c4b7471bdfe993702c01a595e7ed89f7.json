{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmuhammad/Desktop/PricingWebapp/src/StockChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useMemo } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart, CategoryScale, LinearScale, PointElement, LineElement, Tooltip } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip);\nfunction StockChart({\n  data,\n  ticker\n}) {\n  _s();\n  const chartRef = useRef(null);\n\n  // Get all unique 15-minute interval times from the data\n  const fifteenMinuteIntervals = useMemo(() => {\n    const intervals = new Set();\n    data.forEach(point => {\n      const [hours, minutes] = point.time.split(':').map(Number);\n      if (minutes % 15 === 0) {\n        intervals.add(point.time);\n      }\n    });\n    return Array.from(intervals).sort();\n  }, [data]);\n  const chartData = {\n    labels: data.map(p => p.time),\n    datasets: [{\n      label: \"Stock Price\",\n      data: data.map(p => p.price),\n      borderColor: \"rgba(75,192,192,1)\",\n      fill: false\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'category',\n        ticks: {\n          callback: (value, index) => {\n            var _data$index;\n            const time = (_data$index = data[index]) === null || _data$index === void 0 ? void 0 : _data$index.time;\n            // Only show labels at 15-minute intervals\n            const [hours, minutes] = (time === null || time === void 0 ? void 0 : time.split(':').map(Number)) || [];\n            return minutes % 15 === 0 ? time : undefined;\n          },\n          autoSkip: false,\n          maxRotation: 0,\n          minRotation: 0\n        },\n        grid: {\n          display: false\n        }\n      },\n      y: {\n        type: 'linear',\n        title: {\n          display: true,\n          text: 'Price (USD)'\n        },\n        grid: {\n          color: '#eee'\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    const chartInstance = chartRef.current;\n    return () => {\n      if (chartInstance) chartInstance.destroy();\n    };\n  }, [ticker]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"400px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      ref: chartRef,\n      data: chartData,\n      options: options\n    }, ticker, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(StockChart, \"HX70/ZROwCXbRfhkWy4RdfZI/PY=\");\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","useEffect","useRef","useMemo","Line","Chart","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","jsxDEV","_jsxDEV","register","StockChart","data","ticker","_s","chartRef","fifteenMinuteIntervals","intervals","Set","forEach","point","hours","minutes","time","split","map","Number","add","Array","from","sort","chartData","labels","p","datasets","label","price","borderColor","fill","options","responsive","maintainAspectRatio","scales","x","type","ticks","callback","value","index","_data$index","undefined","autoSkip","maxRotation","minRotation","grid","display","y","title","text","color","chartInstance","current","destroy","style","width","height","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hamzahmuhammad/Desktop/PricingWebapp/src/StockChart.js"],"sourcesContent":["import React, { useEffect, useRef, useMemo } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart, CategoryScale, LinearScale, PointElement, LineElement, Tooltip } from \"chart.js\";\n\nChart.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip);\n\nfunction StockChart({ data, ticker }) {\n  const chartRef = useRef(null);\n\n  // Get all unique 15-minute interval times from the data\n  const fifteenMinuteIntervals = useMemo(() => {\n    const intervals = new Set();\n    data.forEach(point => {\n      const [hours, minutes] = point.time.split(':').map(Number);\n      if (minutes % 15 === 0) {\n        intervals.add(point.time);\n      }\n    });\n    return Array.from(intervals).sort();\n  }, [data]);\n\n  const chartData = {\n    labels: data.map(p => p.time),\n    datasets: [{\n      label: \"Stock Price\",\n      data: data.map(p => p.price),\n      borderColor: \"rgba(75,192,192,1)\",\n      fill: false\n    }]\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'category',\n        ticks: {\n          callback: (value, index) => {\n            const time = data[index]?.time;\n            // Only show labels at 15-minute intervals\n            const [hours, minutes] = time?.split(':').map(Number) || [];\n            return minutes % 15 === 0 ? time : undefined;\n          },\n          autoSkip: false,\n          maxRotation: 0,\n          minRotation: 0\n        },\n        grid: {\n          display: false\n        }\n      },\n      y: {\n        type: 'linear',\n        title: {\n          display: true,\n          text: 'Price (USD)'\n        },\n        grid: {\n          color: '#eee'\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    const chartInstance = chartRef.current;\n    return () => {\n      if (chartInstance) chartInstance.destroy();\n    };\n  }, [ticker]);\n\n  return (\n    <div style={{ width: \"100%\", height: \"400px\" }}>\n      <Line \n        ref={chartRef}\n        data={chartData}\n        options={options}\n        key={ticker}\n      />\n    </div>\n  );\n}\n\nexport default StockChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}