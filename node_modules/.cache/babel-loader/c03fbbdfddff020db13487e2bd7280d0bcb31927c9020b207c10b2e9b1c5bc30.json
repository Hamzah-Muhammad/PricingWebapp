{"ast":null,"code":"import React,{useEffect,useRef}from\"react\";import{Line}from\"react-chartjs-2\";import{Chart,CategoryScale,LinearScale,PointElement,LineElement,Tooltip}from\"chart.js\";import{jsx as _jsx}from\"react/jsx-runtime\";Chart.register(CategoryScale,LinearScale,PointElement,LineElement,Tooltip);function StockChart(_ref){let{data,ticker}=_ref;const chartRef=useRef(null);// Time formatting Function \nconst formatTimeWithAMPM=timeString=>{if(!timeString)return'';// Extract time parts\nconst timeParts=timeString.split(' ');let[hours,minutes]=timeParts[0].split(':');let hourNum=parseInt(hours,10);let ampm=timeParts[1]||'';// If already has AM/PM, verify it's correct\nif(ampm){const shouldBePM=hourNum>=12&&hourNum<24;if(shouldBePM&&ampm==='AM'||!shouldBePM&&ampm==='PM'){// Fix incorrect AM/PM\nampm=shouldBePM?'PM':'AM';}}else{// Determine AM/PM for 24-hour format\nampm=hourNum>=12&&hourNum<24?'PM':'AM';}hourNum=hourNum%12||12;// Convert 0 or 24 to 12\nreturn`${hourNum}:${minutes} ${ampm}`;};const chartData={labels:data.map(p=>p.time),datasets:[{label:\"Stock Price\",data:data.map(p=>p.price),borderColor:\"rgba(75,192,192,1)\",borderWidth:2,pointRadius:3,pointHoverRadius:5,fill:false}]};const options={responsive:true,maintainAspectRatio:false,plugins:{tooltip:{enabled:true,mode:\"index\",intersect:false,backgroundColor:\"rgba(0, 0, 0, 0.8)\",titleColor:\"#fff\",bodyColor:\"#fff\",borderColor:\"#fff\",borderWidth:1,displayColors:false,callbacks:{title:context=>formatTimeWithAMPM(context[0].label),label:context=>`$${context.parsed.y.toFixed(2)}`//Fixed to 2 decimal places\n}},legend:{display:false}},scales:{x:{type:'category',title:{display:true,text:'Time (EST)',// X axis label\ncolor:'#666',font:{size:14,weight:'bold'},padding:{top:10,bottom:10}},ticks:{callback:(value,index)=>{var _data$index;const time=(_data$index=data[index])===null||_data$index===void 0?void 0:_data$index.time;if(!time)return undefined;const formattedTime=formatTimeWithAMPM(time);const minutes=time.includes(':')?time.split(':')[1].split(' ')[0]:'00';return parseInt(minutes)%15===0?formattedTime:undefined;// Only show every 15 minutes on the X axis \n},// Not neccessary but 1 minute charts usually \nautoSkip:false,// display 15m intervals on the x-axis \nmaxRotation:0,minRotation:0,color:'#666',font:{size:8}},grid:{display:false}},y:{title:{display:true,text:'Price (USD)',// Y axis label\ncolor:'#666',font:{size:14,weight:'bold'},padding:{top:0,bottom:10}},ticks:{color:'#666',font:{size:12}},grid:{color:'#eee'}}}};useEffect(()=>{const chartInstance=chartRef.current;return()=>{if(chartInstance)chartInstance.destroy();// Destroy chart to generate a new one \n};},[ticker]);return/*#__PURE__*/_jsx(\"div\",{className:\"stock-chart-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"stock-chart-wrapper\",children:/*#__PURE__*/_jsx(Line,{ref:chartRef,data:chartData,options:options},ticker)})});}export default StockChart;","map":{"version":3,"names":["React","useEffect","useRef","Line","Chart","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","jsx","_jsx","register","StockChart","_ref","data","ticker","chartRef","formatTimeWithAMPM","timeString","timeParts","split","hours","minutes","hourNum","parseInt","ampm","shouldBePM","chartData","labels","map","p","time","datasets","label","price","borderColor","borderWidth","pointRadius","pointHoverRadius","fill","options","responsive","maintainAspectRatio","plugins","tooltip","enabled","mode","intersect","backgroundColor","titleColor","bodyColor","displayColors","callbacks","title","context","parsed","y","toFixed","legend","display","scales","x","type","text","color","font","size","weight","padding","top","bottom","ticks","callback","value","index","_data$index","undefined","formattedTime","includes","autoSkip","maxRotation","minRotation","grid","chartInstance","current","destroy","className","children","ref"],"sources":["/Users/hamzahmuhammad/Desktop/PricingWebapp/src/StockChart.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart, CategoryScale, LinearScale, PointElement, LineElement, Tooltip } from \"chart.js\";\n\nChart.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip);\n\nfunction StockChart({ data, ticker }) {\n  const chartRef = useRef(null);\n\n  // Time formatting Function \n  const formatTimeWithAMPM = (timeString) => {\n    if (!timeString) return '';\n    \n    // Extract time parts\n    const timeParts = timeString.split(' ');\n    let [hours, minutes] = timeParts[0].split(':');\n    let hourNum = parseInt(hours, 10);\n    let ampm = timeParts[1] || '';\n    \n    // If already has AM/PM, verify it's correct\n    if (ampm) {\n      const shouldBePM = hourNum >= 12 && hourNum < 24;\n      if ((shouldBePM && ampm === 'AM') || (!shouldBePM && ampm === 'PM')) {\n        // Fix incorrect AM/PM\n        ampm = shouldBePM ? 'PM' : 'AM';\n      }\n    } else {\n      // Determine AM/PM for 24-hour format\n      ampm = hourNum >= 12 && hourNum < 24 ? 'PM' : 'AM';\n    }\n    \n    hourNum = hourNum % 12 || 12; // Convert 0 or 24 to 12\n    \n    return `${hourNum}:${minutes} ${ampm}`;\n  };\n\n  const chartData = {\n    labels: data.map(p => p.time),\n    datasets: [{\n      label: \"Stock Price\",\n      data: data.map(p => p.price),\n      borderColor: \"rgba(75,192,192,1)\",\n      borderWidth: 2,\n      pointRadius: 3,\n      pointHoverRadius: 5,\n      fill: false\n    }]\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      tooltip: {\n        enabled: true,\n        mode: \"index\",\n        intersect: false,\n        backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n        titleColor: \"#fff\",\n        bodyColor: \"#fff\",\n        borderColor: \"#fff\",\n        borderWidth: 1,\n        displayColors: false,\n        callbacks: {\n          title: (context) => formatTimeWithAMPM(context[0].label),\n          label: (context) => `$${context.parsed.y.toFixed(2)}`     //Fixed to 2 decimal places\n        }\n      },\n      legend: {\n        display: false\n      }\n    },\n    scales: {\n      x: {\n        type: 'category',\n        title: {\n          display: true,\n          text: 'Time (EST)', // X axis label\n          color: '#666',\n          font: {\n            size: 14,\n            weight: 'bold'\n          },\n          padding: { top: 10, bottom: 10 }\n        },\n        ticks: {\n          callback: (value, index) => {\n            const time = data[index]?.time;\n            if (!time) return undefined;\n            const formattedTime = formatTimeWithAMPM(time);\n            const minutes = time.includes(':') ? time.split(':')[1].split(' ')[0] : '00';\n            return parseInt(minutes) % 15 === 0 ? formattedTime : undefined; // Only show every 15 minutes on the X axis \n          },                                                                 // Not neccessary but 1 minute charts usually \n          autoSkip: false,                                                   // display 15m intervals on the x-axis \n          maxRotation: 0,\n          minRotation: 0,\n          color: '#666',\n          font: {\n            size: 8,\n          }\n        },\n        grid: {\n          display: false\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Price (USD)', // Y axis label\n          color: '#666',\n          font: {\n            size: 14,\n            weight: 'bold'\n          },\n          padding: { top: 0, bottom: 10 }\n        },\n        ticks: {\n          color: '#666',\n          font: {\n            size: 12\n          }\n        },\n        grid: {\n          color: '#eee'\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    const chartInstance = chartRef.current;\n    return () => {\n      if (chartInstance) chartInstance.destroy();  // Destroy chart to generate a new one \n    };\n  }, [ticker]);\n\n  return (\n    <div className=\"stock-chart-container\">\n      <div className=\"stock-chart-wrapper\">\n        <Line \n          ref={chartRef}\n          data={chartData}\n          options={options}\n          key={ticker}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default StockChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}