{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmuhammad/stock-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SearchBar from \"./SearchBar\";\nimport StockChart from \"./StockChart\";\nimport Parameters from \"./Parameters\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedTicker, setSelectedTicker] = useState(null);\n  const [stockData, setStockData] = useState([]);\n  const [drift, setDrift] = useState(0.0002);\n  const [volatility, setVolatility] = useState(0.05);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (selectedTicker) {\n      const fetchData = async () => {\n        try {\n          const response = await axios.get(`http://localhost:5000/api/stock/${selectedTicker}`);\n          setStockData(response.data.prices);\n          setError(null);\n        } catch (err) {\n          setError(\"Failed to fetch stock data. Please check the backend server.\");\n          console.error(err);\n        }\n      };\n      fetchData();\n    }\n  }, [selectedTicker]);\n  const handleParameterUpdate = async (newDrift, newVolatility) => {\n    setDrift(newDrift);\n    setVolatility(newVolatility);\n    try {\n      await axios.post(`http://localhost:5000/api/stock/${selectedTicker}/parameters`, {\n        drift: newDrift,\n        volatility: newVolatility\n      });\n    } catch (err) {\n      setError(\"Failed to update parameters. Please check the backend server.\");\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-Time Stock Prices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSelectTicker: setSelectedTicker\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), selectedTicker && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StockChart, {\n        data: stockData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Parameters, {\n        drift: drift,\n        volatility: volatility,\n        onUpdate: handleParameterUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dT3TnXdl7pvWzdUSyxZ/RUMXkF0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","SearchBar","StockChart","Parameters","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","selectedTicker","setSelectedTicker","stockData","setStockData","drift","setDrift","volatility","setVolatility","error","setError","fetchData","response","get","data","prices","err","console","handleParameterUpdate","newDrift","newVolatility","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectTicker","style","color","onUpdate","_c","$RefreshReg$"],"sources":["/Users/hamzahmuhammad/stock-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SearchBar from \"./SearchBar\";\nimport StockChart from \"./StockChart\";\nimport Parameters from \"./Parameters\";\n\nfunction App() {\n  const [selectedTicker, setSelectedTicker] = useState(null);\n  const [stockData, setStockData] = useState([]);\n  const [drift, setDrift] = useState(0.0002);\n  const [volatility, setVolatility] = useState(0.05);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (selectedTicker) {\n      const fetchData = async () => {\n        try {\n          const response = await axios.get(`http://localhost:5000/api/stock/${selectedTicker}`);\n          setStockData(response.data.prices);\n          setError(null);\n        } catch (err) {\n          setError(\"Failed to fetch stock data. Please check the backend server.\");\n          console.error(err);\n        }\n      };\n      fetchData();\n    }\n  }, [selectedTicker]);\n\n  const handleParameterUpdate = async (newDrift, newVolatility) => {\n    setDrift(newDrift);\n    setVolatility(newVolatility);\n    try {\n      await axios.post(`http://localhost:5000/api/stock/${selectedTicker}/parameters`, {\n        drift: newDrift,\n        volatility: newVolatility,\n      });\n    } catch (err) {\n      setError(\"Failed to update parameters. Please check the backend server.\");\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Real-Time Stock Prices</h1>\n      <SearchBar onSelectTicker={setSelectedTicker} />\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      {selectedTicker && (\n        <>\n          <StockChart data={stockData} />\n          <Parameters\n            drift={drift}\n            volatility={volatility}\n            onUpdate={handleParameterUpdate}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}