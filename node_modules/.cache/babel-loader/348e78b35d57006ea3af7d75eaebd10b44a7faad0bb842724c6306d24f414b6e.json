{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmuhammad/Desktop/PricingWebapp/src/StockChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart, CategoryScale, LinearScale, PointElement, LineElement, Tooltip } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip);\nfunction StockChart({\n  data,\n  ticker\n}) {\n  _s();\n  const chartRef = useRef(null);\n\n  // Corrected AM/PM formatting function\n  const formatTimeWithAMPM = timeString => {\n    if (!timeString) return '';\n\n    // If already properly formatted, return as-is\n    if (timeString.match(/\\d{1,2}:\\d{2} (AM|PM)/)) {\n      return timeString;\n    }\n\n    // Handle both \"9:30\" and \"9:30 AM\" cases\n    const timeParts = timeString.split(' ');\n    const [hours, minutes] = timeParts[0].split(':');\n    let hourNum = parseInt(hours, 10);\n\n    // For times that already have AM/PM but might be incorrect\n    if (timeParts[1]) {\n      const isPM = timeParts[1].toUpperCase() === 'PM';\n      if (isPM && hourNum < 12) hourNum += 12;\n      if (!isPM && hourNum === 12) hourNum = 0;\n    }\n\n    // Correct AM/PM calculation\n    const ampm = hourNum >= 12 ? 'PM' : 'AM';\n    const displayHour = hourNum % 12 || 12; // Convert 0 to 12\n\n    return `${displayHour}:${minutes} ${ampm}`;\n  };\n  const chartData = {\n    labels: data.map(p => p.time),\n    datasets: [{\n      label: \"Stock Price\",\n      data: data.map(p => p.price),\n      borderColor: \"rgba(75,192,192,1)\",\n      borderWidth: 2,\n      pointRadius: 3,\n      pointHoverRadius: 5,\n      fill: false\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      tooltip: {\n        enabled: true,\n        mode: \"index\",\n        intersect: false,\n        backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n        titleColor: \"#fff\",\n        bodyColor: \"#fff\",\n        borderColor: \"#fff\",\n        borderWidth: 1,\n        displayColors: false,\n        callbacks: {\n          title: context => formatTimeWithAMPM(context[0].label),\n          label: context => `$${context.parsed.y.toFixed(2)}`\n        }\n      },\n      legend: {\n        display: false\n      }\n    },\n    scales: {\n      x: {\n        type: 'category',\n        title: {\n          display: true,\n          text: 'Time',\n          color: '#666',\n          font: {\n            size: 14,\n            weight: 'bold'\n          },\n          padding: {\n            top: 10,\n            bottom: 10\n          }\n        },\n        ticks: {\n          callback: (value, index) => {\n            var _data$index;\n            const time = (_data$index = data[index]) === null || _data$index === void 0 ? void 0 : _data$index.time;\n            if (!time) return undefined;\n            const formattedTime = formatTimeWithAMPM(time);\n            const minutes = time.includes(':') ? time.split(':')[1].split(' ')[0] : '00';\n            return parseInt(minutes) % 15 === 0 ? formattedTime : undefined;\n          },\n          autoSkip: false,\n          maxRotation: 0,\n          minRotation: 0,\n          color: '#666',\n          font: {\n            size: 10 // Smaller font size for x-axis labels\n          }\n        },\n        grid: {\n          display: false\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Price (USD)',\n          color: '#666',\n          font: {\n            size: 14,\n            weight: 'bold'\n          },\n          padding: {\n            top: 0,\n            bottom: 10\n          }\n        },\n        ticks: {\n          color: '#666',\n          font: {\n            size: 12\n          }\n        },\n        grid: {\n          color: '#eee'\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    const chartInstance = chartRef.current;\n    return () => {\n      if (chartInstance) chartInstance.destroy();\n    };\n  }, [ticker]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"400px\",\n      border: \"1px solid #ddd\",\n      borderRadius: \"8px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      ref: chartRef,\n      data: chartData,\n      options: options\n    }, ticker, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(StockChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","useEffect","useRef","Line","Chart","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","jsxDEV","_jsxDEV","register","StockChart","data","ticker","_s","chartRef","formatTimeWithAMPM","timeString","match","timeParts","split","hours","minutes","hourNum","parseInt","isPM","toUpperCase","ampm","displayHour","chartData","labels","map","p","time","datasets","label","price","borderColor","borderWidth","pointRadius","pointHoverRadius","fill","options","responsive","maintainAspectRatio","plugins","tooltip","enabled","mode","intersect","backgroundColor","titleColor","bodyColor","displayColors","callbacks","title","context","parsed","y","toFixed","legend","display","scales","x","type","text","color","font","size","weight","padding","top","bottom","ticks","callback","value","index","_data$index","undefined","formattedTime","includes","autoSkip","maxRotation","minRotation","grid","chartInstance","current","destroy","style","width","height","border","borderRadius","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hamzahmuhammad/Desktop/PricingWebapp/src/StockChart.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart, CategoryScale, LinearScale, PointElement, LineElement, Tooltip } from \"chart.js\";\n\nChart.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip);\n\nfunction StockChart({ data, ticker }) {\n  const chartRef = useRef(null);\n\n  // Corrected AM/PM formatting function\n  const formatTimeWithAMPM = (timeString) => {\n    if (!timeString) return '';\n    \n    // If already properly formatted, return as-is\n    if (timeString.match(/\\d{1,2}:\\d{2} (AM|PM)/)) {\n      return timeString;\n    }\n    \n    // Handle both \"9:30\" and \"9:30 AM\" cases\n    const timeParts = timeString.split(' ');\n    const [hours, minutes] = timeParts[0].split(':');\n    let hourNum = parseInt(hours, 10);\n    \n    // For times that already have AM/PM but might be incorrect\n    if (timeParts[1]) {\n      const isPM = timeParts[1].toUpperCase() === 'PM';\n      if (isPM && hourNum < 12) hourNum += 12;\n      if (!isPM && hourNum === 12) hourNum = 0;\n    }\n    \n    // Correct AM/PM calculation\n    const ampm = hourNum >= 12 ? 'PM' : 'AM';\n    const displayHour = hourNum % 12 || 12; // Convert 0 to 12\n    \n    return `${displayHour}:${minutes} ${ampm}`;\n  };\n\n  const chartData = {\n    labels: data.map(p => p.time),\n    datasets: [{\n      label: \"Stock Price\",\n      data: data.map(p => p.price),\n      borderColor: \"rgba(75,192,192,1)\",\n      borderWidth: 2,\n      pointRadius: 3,\n      pointHoverRadius: 5,\n      fill: false\n    }]\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      tooltip: {\n        enabled: true,\n        mode: \"index\",\n        intersect: false,\n        backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n        titleColor: \"#fff\",\n        bodyColor: \"#fff\",\n        borderColor: \"#fff\",\n        borderWidth: 1,\n        displayColors: false,\n        callbacks: {\n          title: (context) => formatTimeWithAMPM(context[0].label),\n          label: (context) => `$${context.parsed.y.toFixed(2)}`\n        }\n      },\n      legend: {\n        display: false\n      }\n    },\n    scales: {\n      x: {\n        type: 'category',\n        title: {\n          display: true,\n          text: 'Time',\n          color: '#666',\n          font: {\n            size: 14,\n            weight: 'bold'\n          },\n          padding: { top: 10, bottom: 10 }\n        },\n        ticks: {\n          callback: (value, index) => {\n            const time = data[index]?.time;\n            if (!time) return undefined;\n            const formattedTime = formatTimeWithAMPM(time);\n            const minutes = time.includes(':') ? time.split(':')[1].split(' ')[0] : '00';\n            return parseInt(minutes) % 15 === 0 ? formattedTime : undefined;\n          },\n          autoSkip: false,\n          maxRotation: 0,\n          minRotation: 0,\n          color: '#666',\n          font: {\n            size: 10, // Smaller font size for x-axis labels\n          }\n        },\n        grid: {\n          display: false\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Price (USD)',\n          color: '#666',\n          font: {\n            size: 14,\n            weight: 'bold'\n          },\n          padding: { top: 0, bottom: 10 }\n        },\n        ticks: {\n          color: '#666',\n          font: {\n            size: 12\n          }\n        },\n        grid: {\n          color: '#eee'\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    const chartInstance = chartRef.current;\n    return () => {\n      if (chartInstance) chartInstance.destroy();\n    };\n  }, [ticker]);\n\n  return (\n    <div style={{ width: \"100%\", height: \"400px\", border: \"1px solid #ddd\", borderRadius: \"8px\" }}>\n      <Line \n        ref={chartRef}\n        data={chartData}\n        options={options}\n        key={ticker}\n      />\n    </div>\n  );\n}\n\nexport default StockChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}